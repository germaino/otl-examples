version: "3.1"
services:

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    networks:
      - example

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - example

  # Collector
  otel-collector:
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "55678"       # OpenCensus receiver
      - "55680:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
    networks:
      - example

  # Agent
  otel-agent:
    container_name: agent
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-agent-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-agent-config.yaml:/etc/otel-agent-config.yaml
    ports:
      - "1777:1777"   # pprof extension
      - "8887:8888"   # Prometheus metrics exposed by the agent
      - "14268"       # Jaeger receiver
      - "55678"       # OpenCensus receiver
      - "55678:55678" # zpages extension
      - "55679:55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - otel-collector
    networks:
      - example

  # Synthetic load generators
  jaeger-emitter:
    image: omnition/synthetic-load-generator:1.0.25
    environment:
      - JAEGER_COLLECTOR_URL=http://otel-agent:14268
    depends_on:
      - otel-agent
    networks:
      - example

  zipkin-emitter:
    image: omnition/synthetic-load-generator:1.0.25
    environment:
      - ZIPKINV2_JSON_URL=http://otel-agent:9411/api/v2/spans
    depends_on:
      - otel-agent
    networks:
      - example

  metrics-load-generator:
    container_name: demo
    image: demo:latest
    command: ["/usr/local/bin/main", "-otlagent", "otel-agent:55678"]
    build:
      dockerfile: $PWD/Dockerfile
      context: $PWD
    networks:
      - example
    depends_on:
      - otel-agent

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - example

networks:
  example:
